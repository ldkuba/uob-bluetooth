25/02/2019: Sending custom messages does not require additional calls the Controller because messages are sent quite often so any one of them can be used for substituting my data.

My own 'protocol' will be a stack of instructions. These can be either:

- Send: instructs to send specific data. This might require changing the state machine settings to change the channel which is being used (have to look into that) but it might be enough to just wait for the right type of message to come along. This will be probably decided for each case seperately. Therefore a way to change the channel is needed universally as well. For now this seems to be the only important value that has to be controlled outside of the actuall message buffer. If more come up it will be the same case.

- Recieve: Waits to recieve any number of messages or a specific message type.

At each steps the fuzzer will have global settings for interacting with the Controller, like for eg. whether it should block all or some of the outgoing messages which are part of the normal operations of the BLE stack. There will be a callback provided by each 'State' which will be able to change the global settings of the fuzzer (preferably two, one foe the start and one for the end of the 'State's' operation).

The "state machine" whether its an advertising or connection one, are available to the fuzzer through a function parameter so the settings can be altered. Easily.

Finally, if the Radio ever has to be adjusted it is also available to the fuzzer code but for now there is no aparent radio features that need to be altered.

26/02/2019: Fuzzer global settings:
- A description of which messages should be blocked and which should be transmitted. Messages will be catregorised and specific categories can be disabled. The messages are categorized as follows:

* Advertising: all types of advertising messages
